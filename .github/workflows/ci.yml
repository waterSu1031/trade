name: CI Pipeline

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  # Check which projects have changes
  changes:
    runs-on: ubuntu-latest
    outputs:
      batch: ${{ steps.filter.outputs.batch }}
      dashboard: ${{ steps.filter.outputs.dashboard }}
      engine: ${{ steps.filter.outputs.engine }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          batch:
            - 'trade_batch/**'
            - 'common/libs/java/**'
          dashboard:
            - 'trade_dashboard/**'
            - 'common/libs/python/**'
          engine:
            - 'trade_engine/**'
            - 'common/libs/python/**'
          frontend:
            - 'trade_frontend/**'

  # Java/Spring Boot - trade_batch
  test-batch:
    needs: changes
    if: ${{ needs.changes.outputs.batch == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
    - name: Run tests
      run: |
        cd trade_batch
        ./mvnw test

  # Python - trade_dashboard
  test-dashboard:
    needs: changes
    if: ${{ needs.changes.outputs.dashboard == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    - name: Install dependencies
      run: |
        cd trade_dashboard
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio
    - name: Run tests
      run: |
        cd trade_dashboard
        pytest

  # Python - trade_engine
  test-engine:
    needs: changes
    if: ${{ needs.changes.outputs.engine == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
    - name: Install dependencies
      run: |
        cd trade_engine
        python -m pip install --upgrade pip
        # Skip TA-Lib for CI
        grep -v "ta-lib" requirements.txt > requirements-ci.txt
        pip install -r requirements-ci.txt
        pip install pytest
    - name: Run tests
      run: |
        cd trade_engine
        pytest

  # Node.js/Svelte - trade_frontend
  test-frontend:
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js 18
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: trade_frontend/package-lock.json
    - name: Install dependencies
      run: |
        cd trade_frontend
        npm ci
    - name: Run lint
      run: |
        cd trade_frontend
        npm run check
    - name: Build
      run: |
        cd trade_frontend
        npm run build

  # Overall status check
  ci-status:
    runs-on: ubuntu-latest
    needs: [test-batch, test-dashboard, test-engine, test-frontend]
    if: always()
    steps:
    - name: Check status
      run: |
        if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
          echo "One or more tests failed"
          exit 1
        else
          echo "All tests passed"
        fi