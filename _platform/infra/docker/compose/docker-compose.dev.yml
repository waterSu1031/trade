version: '3.8'

services:
  # Development database
  db:
    image: timescale/timescaledb:latest-pg15
    container_name: trade_db_dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-freeksj}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-Lsld1501!}
      POSTGRES_MULTIPLE_DATABASES: trade_db,data_db
    ports:
      - "5433:5432"  # Changed to avoid conflict
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - trade_network_dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-freeksj}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (Development)
  redis:
    image: redis:7-alpine
    container_name: trade_redis_dev
    restart: unless-stopped
    ports:
      - "6380:6379"  # Changed to avoid conflict
    networks:
      - trade_network_dev

  # Backend API (Development with hot reload)
  backend:
    build:
      context: ../../../trade_dashboard
      dockerfile: Dockerfile.dev
    container_name: trade_backend_dev
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${DB_USER:-freeksj}:${DB_PASSWORD:-Lsld1501!}@db:5432/trade_db
      REDIS_URL: redis://redis:6379
      IB_HOST: ${IB_HOST:-host.docker.internal}
      IB_PORT: ${IB_PORT:-4002}
      IB_CLIENT_ID_DASHBOARD: ${IB_CLIENT_ID_DASHBOARD:-10}
      IB_USERNAME: ${IB_USERNAME:-}
      IB_PASSWORD: ${IB_PASSWORD:-}
      ENVIRONMENT: development
      DEBUG: true
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    networks:
      - trade_network_dev
    volumes:
      - ../../../trade_dashboard:/app  # Mount source code for hot reload
      - /app/__pycache__       # Exclude __pycache__
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (Development with hot reload)
  frontend:
    build:
      context: ../../../trade_frontend
      dockerfile: Dockerfile.dev
    container_name: trade_frontend_dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      VITE_API_URL: http://localhost:8000
      VITE_WS_URL: ws://localhost:8000
    ports:
      - "5173:5173"
    depends_on:
      - backend
    networks:
      - trade_network_dev
    volumes:
      - ../../../trade_frontend:/app
      - /app/node_modules  # Exclude node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data_dev:
    driver: local

networks:
  trade_network_dev:
    driver: bridge